openapi: 3.0.1
info:
  title: Ligato VPP Agent REST APIs
  description: Describes the REST APIs supported by the Ligato VPP Agent
  version: 3.0
servers:
  - url: 'http://{hostServer}:9191'
    variables:
      hostServer:
        default: locahost
        description: localhost or VPP agent server IP address
tags:
  - name: Ligato VPP Agent
paths:
  /dump/linux/v2/interfaces:
    get:
      summary: Returns a list of configured Linux Interfaces
      description: VPP Agent Linux Interfaces info
      tags:
        - Linux Interfaces Plugin
      responses:
        '200':
          description: Returns a list of configured Linux Interfaces
          content:
            application/json:
              schema:
                type: array
                description: list of configured Linux Interfaces
                items:
                  type: object
                  description: an individual Linux Interface and meta object
                  properties:
                    interfaces:
                      type: object
                      properties:
                          name:
                            type: string
                            description: Name is mandatory field representing logical name for the interface. It must be unique across all configured interfaces
                            example: tap-vpp1
                          type:
                            type: string
                            description: Type represents the type of interface and It must match with actual Link. If type is TAP_TO_LINK, use tap property below. If type is VETH, use veth property
                            enum:
                              - UNDEFINED
                              - VETH
                              - TAP_TO_VPP
                              - LOOPBACK
                              - EXISTING
                            example: TAP_TO_VPP
                          namespace:
                            type: object
                            description: Namespace is a reference to a Linux network namespace where the interface should be placed in
                            properties:
                              type:
                                type: string
                                example: FD
                              reference:
                                type: string
                                example: /proc/12661/ns/net
                          hostIfName:
                            type: string
                            description: Name of the interface in the host OS. If not set, the host name will be the same as the interface logical name
                            example: vpp1
                          enabled:
                            type: boolean
                            description: Enabled controls if the interface should be UP
                            example: true
                          ipAddresses:
                            type: array
                            description: IPAddresses define list of IP addresses for the interface and must be defined in the following format of <ipAddress>/<ipPrefix>. Note that interface could have IPv4 and IPv6 with example being ["127.0.0.1/8", "::1/128"]
                            items:
                              type: string
                              format: ipv4
                              example: 192.168.22.1/24
                          physAddress:
                            type: string
                            format: mac
                            example: ca:aa:bc:5d:76:9c
                          mtu:
                            type: integer
                            format: uint32
                            example: 1450
                          tap:
                            $ref: '#/components/schemas/tap_link_linux'              
                          veth:
                            $ref: '#/components/schemas/veth_link_linux'
                    interface_meta:
                      $ref: '#/components/schemas/interface_meta_linux'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: string
                description: error message
                example: 404 page not found
        '500':
          description: error
          content:
            application/json:
              schema:
                type: string
                description: something not working properly in system
                example: 500 Internal server error
  /stats/linux/interfaces:
    get:
      description: linux interface stats
      tags:
        - Linux Interfaces Plugin
      responses:
        '200':
          description: linux stats entries
          content:
            application/json:
              schema:
                type: array
                description: linux interface stats
                items:
                  type: object
                  description: linux route and meta data
                  properties:
                    interface_name:
                      type: object
                      example: tap-vpp1
                    interface_type:
                      type: string
                      enum:
                        - 0 is "UNDEFINED",
                        - 1 is "VETH",
                        - 2 is "TAP_TO_VPP",
                        - 3 is "LOOPBACK",
                        - 4 is "EXISTING",
                      example: 2
                    linux_if_index:
                      type: integer
                      example: 6
                    rx_packets:
                      type: integer
                      format: uint64
                      example: 58919
                    tx_packets:
                      type: integer
                      format: uint64
                      example: 54273
                    rx_bytes:
                      type: integer
                      format: uint64
                      example: 83203332
                    tx_bytes:
                      type: integer
                      format: uint64
                      example: 85581834
                    rx_errors:
                      type: integer
                      format: uint64
                      example: 0
                    tx_errors:
                      type: integer
                      format: uint64
                      example: 0
                    rx_dropped:
                      type: integer
                      format: uint64
                      example: 0
                    tx_dropped:
                      type: integer
                      format: uint64
                      example: 0
        '404':
          description: error
          content:
            application/json:
              schema:
                type: string
                description: error message
                example: 404 page not found
        '500':
          description: error
          content:
            application/json:
              schema:
                type: string
                description: something not working properly in system
                example: 500 Internal server error
components:
  schemas:
    interface_meta_linux:
        type: object
        properties:
          linux_if_index:
            type: integer
            format: uint32
            example: 6
          parent_index:
            type: integer
            format: uint32
            example: 0
          master_index:
            type: integer
            format: uint32
            example: 0
          oper_state:
            type: integer
            format: uint8
            example: 0
          flags:
            type: integer
            format: uint32
            example: 69699
          encapsulation:
            type: string
            example: ether
          num_rx_queue:
            type: integer
            format: uint32
            example: 0
          num_tx_queue:
            type: integer
            format: uint32
            example: 0
          tx_queue_len:
            type: integer
            format: uint32
            example: 500
    tap_link_linux:
      type: object
      properties:
        vppTapIfName:
          type: string
          description: Logical name of the VPP TAP interface (mandatory for TAP_TO_VPP)
          example: tag-vpp2
    veth_link_linux:
      type: object
      properties:
        peer_if_name:
          type: string
          description: Name of the VETH peer, i.e. other end of the linux veth (mandatory for VETH)
          example: veth2
        rx_checksum_offloading:
          $ref: '#/components/schemas/checksum_offloading'
        tx_checksum_offloading:
          $ref: '#/components/schemas/checksum_offloading'        
    checksum_offloading:
      type: string
      description: checksum offloading, enabled by default on rx and tx sides
      enum:
        - CHKSM_OFFLOAD_DEFAULT
        - CHKSM_OFFLOAD_ENABLED
        - CHKSM_OFFLOAD_DISABLED
      example: CHKSM_OFFLOAD_ENABLED